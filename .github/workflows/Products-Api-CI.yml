# To Build Products-API

name: Products-Api-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

## Sets environment variable
## env:
## CODECOV_TOKEN: ${{ dev.CODECOV_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore eshop-services-products.sln
      - name: Build
        run: dotnet build eshop-services-products.sln --no-restore
      - name: Test
        run: dotnet test eshop-services-products.sln --no-build --verbosity normal --collect:"XPlat Code Coverage"
      - name: CodeCoverage
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Veracode Dependency Scanning
        uses: veracode/veracode-sca@v1.09
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/} ${{github.ref_name}}
      - name: Publish
        if: ${{ github.ref_name == 'main' }}
        run: dotnet publish eshop-services-products.sln -c Release -o productsapi
      - name: Upload a Build Artifact
        if: ${{ github.ref_name == 'main' }}
        uses: actions/upload-artifact@v2.2.2
        with:
          name: productsapi
          path: productsapi/**
          if-no-files-found: error
